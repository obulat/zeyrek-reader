{"version":3,"sources":["use-auth.tsx","components/LookUpHistorySection.tsx","pages/Dashboard.js","components/SelectedWordDefinitions.tsx","use-text.tsx","components/Reader.tsx","pages/Home.tsx","pages/Login.tsx","pages/Signup.js","components/TextUploadForm.tsx","pages/NewText.tsx","config/routes.js","components/AppRoute.tsx","components/Navbar.tsx","App.tsx","reportWebVitals.js","index.js"],"names":["firebaseConfig","apiKey","process","authDomain","databaseURL","REACT_APP_FIREBASE_DATABASE","projectId","storageBucket","messagingSenderId","firebase","initializeApp","authContext","React","ProvideAuth","children","auth","user","setUser","gProvider","GoogleAuthProvider","addScope","setCustomParameters","prompt","loginG","signInWithPopup","then","response","login","email","password","signInWithEmailAndPassword","signup","createUserWithEmailAndPassword","sendPasswordResetEmail","confirmPasswordReset","code","logout","signOut","unsubscribe","onAuthStateChanged","useProvideAuth","Provider","value","useAuth","LookUpHistorySection","lookupHistory","className","Object","keys","map","word","Dashboard","getLookupHistory","hist","localStorage","getItem","JSON","parse","style","background","photoURL","displayName","SelectedWordDefinitions","definitions","meanings","meaning","index","Fragment","term","idx","line","pos","id","defaultText","textContext","ProvideText","text","setText","textKey","setTextKey","useState","textData","setTextData","uploadText","useEffect","storedTextData","fetch","method","headers","body","stringify","json","data","setItem","useProvideText","useText","Reader","readerRef","setDefinitions","activeWord","setActiveWord","setLookupHistory","newHistory","ref","paragraph","d","str","currentWord","includes","onClick","paragraphNo","wordIdOneBasedIndex","cName","handleSpanClick","Home","useRef","type","current","scrollIntoView","Login","emailRef","passwordRef","to","onSubmit","e","preventDefault","em","p","placeholder","required","Signup","TextUploadForm","inputRef","submitted","setSubmitted","target","getElementsByTagName","TextField","label","multiline","rows","variant","Button","color","NewText","routes","path","component","isPrivate","AppRoutes","Component","rest","userDetails","render","props","Boolean","pathname","renderRoute","Navbar","anchorEl","setAnchorEl","href","viewBox","fill","xmlns","width","height","stroke","x1","y1","x2","y2","gradientUnits","stopColor","stopOpacity","offset","Link","aria-controls","aria-haspopup","event","el","currentTarget","src","undefined","alt","Menu","keepMounted","open","onClose","MenuItem","App","theme","createMuiTheme","palette","primary","main","contrastText","ThemeProvider","route","AppRoute","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0c3a9999.chunk.js","sourcesContent":["import * as React from 'react';\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_SENDER_ID\n}\n\nfirebase.initializeApp(firebaseConfig);\n\ntype AuthProviderProps = {\n    children?: React.ReactNode,\n    loginG: () => void,\n    user: firebase.User | null,\n    logout: () => void,\n    login(em: string, p: string): void;\n}\ntype Email = string;\n\nexport const authContext = React.createContext<Partial<AuthProviderProps>>({});\n\nexport function ProvideAuth(\n    { children }: {children: React.ReactNode}\n    ): React.ReactElement {\n  const auth = useProvideAuth();\n  return <authContext.Provider value={auth}>{children}</authContext.Provider>\n}\n\nexport function useAuth(): Partial<AuthProviderProps> {\n  return React.useContext(authContext);\n}\n\nfunction useProvideAuth() {\n  const [user, setUser] = React.useState<firebase.User | null>(null);\n  const gProvider = new firebase.auth.GoogleAuthProvider();\n  gProvider.addScope('profile');\n  gProvider.addScope('email');\n  gProvider.setCustomParameters({ prompt: 'select_account' });\n\n\n  const loginG = () => {\n      return firebase\n          .auth()\n          .signInWithPopup(gProvider)\n          .then(response => {\n              setUser(response.user)\n              return response.user;\n          })\n  }\n\n  const login = (email: Email, password: string) => {\n    return firebase\n        .auth()\n        .signInWithEmailAndPassword(email, password)\n        .then(response => {\n          setUser(response.user);\n        });\n  };\n\n  const signup = (email: Email, password: string) => {\n    return firebase\n        .auth()\n        .createUserWithEmailAndPassword(email, password)\n        .then(response => {\n          setUser(response.user);\n        });\n  };\n\n  const sendPasswordResetEmail = (email: Email) => {\n    return firebase\n        .auth()\n        .sendPasswordResetEmail(email)\n        .then(() => {\n          return true;\n        });\n  };\n\n  const confirmPasswordReset = (code: string, password: string) => {\n    return firebase\n        .auth()\n        .confirmPasswordReset(code, password)\n        .then(() => {\n          return true;\n        });\n  };\n\n  const logout = () => {\n    firebase.auth().signOut().then(() => {\n      setUser(null)\n    })\n  }\n\n  React.useEffect(() => {\n    const unsubscribe = firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        setUser(user);\n      } else {\n        setUser(null);\n      }\n    });\n\n    // Cleanup subscription on unmount\n    return () => unsubscribe();\n  }, []);\n  return {\n    user,\n    login,\n    loginG,\n    signup,\n    logout,\n    sendPasswordResetEmail,\n    confirmPasswordReset\n  }\n}\n","import React from \"react\";\nimport {LookUpHistory} from \"./Reader\";\n\ntype LookUpHistorySectionProps = {\n    lookupHistory: LookUpHistory\n}\n\nexport function LookUpHistorySection({lookupHistory}: LookUpHistorySectionProps) {\n    return (\n        <div className=\"history\">\n            <details>\n                <summary>Words you&apos;ve looked up</summary>\n                <p className=\"words\">\n                    {Object.keys(lookupHistory).map(word => (\n                        <span key={word}>{word}: {lookupHistory[word]}</span>\n                    ))}\n                </p>\n            </details>\n        </div>\n    )\n}\n","import React  from \"react\";\nimport { useAuth } from '../use-auth';\nimport { LookUpHistorySection } from '../components/LookUpHistorySection';\n\nconst Dashboard = () => {\n  const auth = useAuth();\n\n  function getLookupHistory() {\n    const hist = localStorage.getItem('lookupHistory')\n    if (hist) {\n      return JSON.parse(hist)\n    }\n  }\n  const hist = getLookupHistory();\n  return (\n    <div className=\"db__container\">\n        <div\n          style={{ background: `url(${ auth.user.photoURL })  no-repeat center center` }}\n          className=\"db__avatar\"\n        />\n        <h2 className=\"db__username\">{ auth.user.displayName }</h2>\n        <h3 className=\"db__email\">{ auth.user.email }</h3>\n      { hist && <LookUpHistorySection lookupHistory={getLookupHistory()} />}\n    </div>\n  );\n};\nexport default Dashboard;\n","import React from \"react\";\nimport {WordDefinitions, WordMeanings} from \"./Reader\";\n\nexport function SelectedWordDefinitions({definitions}: {definitions: WordDefinitions}) {\n    return (\n        <div className='definitions'>\n            {definitions.meanings.map((meaning: WordMeanings, index: number) => (\n                <React.Fragment key={index}>\n                    {Object.keys(meaning).map((term: string, idx: number) => (\n                        <React.Fragment key={idx}>\n                            <p className=\"definition-term\">{term}</p>\n                            <ol>\n                                {meaning[term].map(line => (\n                                    <li key={line.id}>\n                                        <span className=\"pos\">{line.pos}</span>\n                                        <span className=\"definition-text\">{line.meaning}</span>\n                                    </li>\n                                ))}\n                            </ol>\n                        </React.Fragment>\n                    ))}\n                </React.Fragment>\n            ))}\n        </div>\n    )\n}\n","import * as React from 'react';\nimport {useEffect, useState} from \"react\";\nimport {WordDefinitions} from './components/Reader'\n\n\nconst defaultText = `KÜRK MANTOLU MADONNA\nŞimdiye kadar tesadüf ettiğim insanlardan bir tanesi benim üzerimde belki en büyük tesiri yapmıştır. Aradan aylar geçtiği halde bir türlü bu tesirden kurtulamadım. Ne zaman kendimle baş başa kalsam, Raif efendinin saf yüzü, biraz dünyadan uzak, buna rağmen bir insana tesadüf ettikleri zaman tebessüm etmek isteyen bakışları gözlerimin önünde canlanıyor.\n`\n\ntype TextProviderProps = {\n  children?: React.ReactNode,\n  text: string,\n  uploadText: (text: string) => void,\n  textData: WordDefinitions[][] | []\n}\n\nexport const textContext = React.createContext<Partial<TextProviderProps>>({})\n\nexport function ProvideText(\n    { children }: {children: React.ReactNode}\n    ): JSX.Element {\n  const text = useProvideText();\n  return <textContext.Provider value={text}>{children}</textContext.Provider>\n}\n\nexport function useText():Partial<TextProviderProps> {\n  return React.useContext(textContext);\n}\n\n\nfunction useProvideText() {\n  const [text, setText] = React.useState<string>(defaultText);\n  const [textKey, setTextKey] = React.useState<'default' | 'user'>('default')\n  const [textData, setTextData] = useState<WordDefinitions[][] | []>([])\n\n  useEffect(() => {\n    const storedTextData = localStorage.getItem(`${textKey}-text`)\n    if (textKey == 'default' && storedTextData) {\n      setTextData(JSON.parse(storedTextData));\n    } else {\n      fetch('https://serene-lake-52519.herokuapp.com/annotate_text', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ text: text })\n      })\n          .then(response => response.json())\n          .then(data => {\n            setTextData(data)\n            localStorage.setItem(`${textKey}-text`, JSON.stringify(data))\n          })\n    }\n  }, [text])\n\n  function uploadText(text: string) {\n    setTextKey('user')\n    setText(text)\n  }\n\n  return {\n    text,\n    uploadText,\n    textData\n  }\n}\n","import React, { useState} from 'react'\nimport {SelectedWordDefinitions} from \"./SelectedWordDefinitions\";\nimport { useText } from '../use-text';\n\n\nexport interface LookUpHistory {\n  [key: string]: number\n}\n\nexport interface WordMeaning {\n  id: number,\n  meaning: string,\n  pos: string\n}\n\nexport type WordMeanings = {\n  [key: string] : WordMeaning[]\n}\n\nexport interface WordDefinitions {\n  id: number,\n  word: string,\n  meanings: WordMeanings[]\n}\n\n\nfunction Reader ({readerRef}: {\n  readerRef: React.RefObject<HTMLDivElement>\n}): React.ReactElement {\n  const {textData} = useText();\n\n  const [definitions, setDefinitions] = useState<WordDefinitions | null>(null)\n  const [activeWord, setActiveWord] = useState<string | null>(null)\n  const [lookupHistory, setLookupHistory] = useState<LookUpHistory>({})\n\n  React.useEffect(() => {\n    if (definitions) {\n      const word = definitions\n      let newHistory;\n      if (word.word in lookupHistory) {\n        newHistory = {...lookupHistory, [word.word] : lookupHistory[word.word] + 1 }\n      } else {\n        newHistory = {...lookupHistory, [word.word]: 1}\n      }\n      setLookupHistory(newHistory)\n      localStorage.setItem('lookupHistory', JSON.stringify(newHistory))\n    }\n  } , [activeWord])\n\n  function handleSpanClick(paragraphNo: number, wordIdOneBasedIndex: number, cName: string) {\n    setActiveWord(cName)\n    if (textData) {\n      const word: WordDefinitions = textData[paragraphNo][wordIdOneBasedIndex - 1];\n      setDefinitions(word);\n    }\n  }\n  const isPunctuation = (str: string) => (['.', ',', '!'].includes(str))\n\n  return (\n    <section className=\"reader\" ref={readerRef}>\n      <div className=\"text-container\">\n        <div className=\"text\">\n            {textData && (textData as WordDefinitions[][]).map((paragraph: WordDefinitions[], idx: number) => (\n                <p key={idx}>\n                  {paragraph && paragraph.map(d => {\n                    const currentWord = `${idx}-${d.id}`\n                    return activeWord === currentWord\n                        ? (\n                            <span key={d.id}\n                                 className={`span-${currentWord} active`}\n                                 >\n                              {d.word}\n                            </span>\n                        ) : (\n                            <span key={d.id}\n                            className={`span-${idx}-${d.id}${isPunctuation(d.word)\n                                ? \" punctuation\"\n                                : \"\"}`}\n                            onClick={() => handleSpanClick(idx, d.id, `${idx}-${d.id}`)}>{d.word}</span>\n                        )\n                  })\n                  }\n                </p>\n            ))}\n        </div>\n\n      </div>\n      {\n        definitions && <SelectedWordDefinitions definitions={definitions} />\n      }\n    </section>\n  )\n}\n\nexport default Reader;\n","import React, { useRef } from 'react';\n\nimport Reader from '../components/Reader';\nimport { useAuth } from '../use-auth';\n\n\nfunction Home(): React.ReactElement {\n  const auth = useAuth();\n  const readerRef = useRef(null);\n\n  function scrollToReader() {\n    if (readerRef.current !== null) {\n        const readerElement = readerRef.current as unknown as HTMLDivElement\n        readerElement.scrollIntoView(true);\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <main className=\"content\">\n        {\n          !auth.user\n          ?  (<section className=\"hero-section\">\n              <h1 className=\"hero-heading\">Learn Turkish by reading</h1>\n              <div className=\"hero-text\">\n                <p>Enjoy reading about anything you like in Turkish.</p>\n                <p>Look up any word instantly, memorize words you looked up\n                  by adding them to your flashcard program. Learning in context\n                  is great for vocabulary retention!\n                </p>\n              </div>\n              <button type=\"button\" className=\"cta-button\" onClick={scrollToReader}>Read in Turkish now!</button>\n            </section>\n            )\n            : null\n        }\n\n       <Reader readerRef={readerRef} />\n      </main>\n    </div>\n  );\n}\n\nexport default Home;\n","import React, { useRef } from \"react\";\nimport { useAuth } from '../use-auth';\nimport {Redirect} from \"react-router-dom\";\n\nfunction Login(): JSX.Element {\n\n  const {user, login, loginG} = useAuth();\n\n  const emailRef = useRef(null);\n  const passwordRef = useRef(null);\n\n\n  function submitLoginForm(e:React.FormEvent<HTMLFormElement>) {\n    e.preventDefault();\n    const email = emailRef.current;\n    const password = passwordRef.current;\n    if (email && password) {\n      const em = (email as HTMLInputElement).value;\n      const p = (password as HTMLInputElement).value;\n      login?.(em,p);\n    }\n\n  }\n  return user ? <Redirect to='/' /> : (\n    <div className=\"auth-container\">\n      <p> Please login </p>\n      <form className=\"auth-form\" onSubmit={submitLoginForm}>\n        <label>\n          <span>Email:</span>\n          <input type=\"email\" placeholder=\"user@email.com\" ref={emailRef} required/>\n        </label>\n        <label>\n          <span>Password:</span>\n          <input type=\"password\" ref={passwordRef} required/>\n        </label>\n        <button className=\"button\" type=\"submit\">Login</button>\n      </form>\n      <p className=\"sep\"><span className=\"sep-text\">or </span></p>\n      <button className=\"button\" onClick={loginG}>Login with Google</button>\n    </div>\n  );\n}\nexport default Login;\n","import React, { useRef } from \"react\";\nimport { useAuth } from '../use-auth';\nimport { Redirect } from 'react-router-dom';\n\nconst Signup = () => {\n  const auth = useAuth();\n\n  const emailRef = useRef(null);\n  const passwordRef = useRef(null);\n\n  function submitSignupForm(e) {\n    e.preventDefault();\n    const email = emailRef.current;\n    const password = passwordRef.current;\n    const em = email.value;\n    const p = password.value;\n    auth.signup(em,p);\n  }\n\n    return auth.user ? <Redirect to='/' /> : (\n    <div className=\"auth-container\">\n      <p> Please signup </p>\n      <form className=\"auth-form\" onSubmit={submitSignupForm}>\n        <label>\n          <span>Email:</span>\n          <input type=\"email\" placeholder=\"user@email.com\" ref={emailRef} required />\n        </label>\n        <label>\n          <span>Password:</span>\n          <input type=\"password\" ref={passwordRef} required/>\n        </label>\n        <button className=\"button\" type=\"submit\">Signup</button>\n      </form>\n      <p className=\"sep\"><span className=\"sep-text\">or </span></p>\n      <button className=\"button\" type=\"button\" onClick={auth.loginG}>Sign up with Google</button>\n    </div>\n    )\n};\nexport default Signup;\n","import {Button, TextField} from \"@material-ui/core\";\nimport React, {useRef, useState} from \"react\";\nimport {useText} from \"../use-text\";\nimport {Redirect} from \"react-router-dom\";\n\n\nfunction TextUploadForm(): React.ReactElement {\n    const inputRef = useRef(null);\n    const {uploadText} = useText();\n    const [submitted, setSubmitted] = useState(false)\n\n    function submitForm(e:React.FormEvent<HTMLFormElement>) {\n        e.preventDefault();\n        const form = e.target as HTMLFormElement\n        const textarea = form.getElementsByTagName('textarea')[0]\n        const text = textarea.value\n        if (uploadText) {\n            uploadText(text)\n            setSubmitted(true)\n        }\n    }\n    return (\n        submitted\n            ? ( <Redirect to='/' /> )\n            : (\n            <form className=\"upload-form\" onSubmit={submitForm}>\n                <TextField\n                    id=\"user-text\"\n                    label=\"Your text\"\n                    multiline\n                    rows={10}\n                    ref={inputRef}\n                    placeholder=\"Paste your text here\"\n                    variant=\"outlined\"\n                />\n                <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    type=\"submit\"\n                    className=\"upload-button\"\n                >Load Text</Button>\n            </form>\n    ))\n}\nexport default TextUploadForm\n","import React from 'react';\nimport TextUploadForm from \"../components/TextUploadForm\";\n\nfunction NewText(): React.ReactElement {\n  return (\n    <div className=\"App\">\n      <main className=\"content\">\n        <section className=\"reader\">\n          <div className=\"text-container\">\n            <TextUploadForm />\n          </div>\n        </section>\n      </main>\n    </div>\n  );\n}\n\nexport default NewText;\n","import Dashboard from '../pages/Dashboard';\nimport Home from '../pages/Home';\nimport Login from '../pages/Login';\nimport Signup from '../pages/Signup';\nimport NewText from '../pages/NewText';\n\nconst routes = [\n  {\n    path: '/login',\n    component: Login,\n    isPrivate: false\n  },\n  {\n    path: '/signup',\n    component: Signup,\n    isPrivate: false\n  },\n  {\n    path: '/dashboard',\n    component: Dashboard,\n    isPrivate: true\n  },\n  {\n    path: '/new_text',\n    component: NewText,\n    isPrivate: true\n  },\n  {\n    path: '/',\n    component: Home,\n    isPrivate: false\n  },\n];\n\nexport default routes;\n","import React from 'react';\nimport { StaticContext } from 'react-router';\nimport {Redirect, Route, RouteComponentProps} from 'react-router-dom';\nimport {useAuth} from '../use-auth'\n\ninterface AppRouterProps {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  component: React.ComponentFactory<any, any>,\n  path: string,\n  isPrivate: boolean,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  rest?: any\n}\n\nconst AppRoutes = ({component: Component, path, isPrivate, ...rest}: AppRouterProps): React.ReactElement => {\n  const userDetails = useAuth();\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  function renderRoute(isPrivate: boolean, props: JSX.IntrinsicAttributes | RouteComponentProps<any, StaticContext, unknown>) {\n    if ( isPrivate && !Boolean(userDetails.user)) {\n      return <Redirect to={{pathname: '/login'}} />\n    } else {\n      return <Component {...props} />;\n      }\n  }\n\n  return (\n    <Route\n      path={path}\n      render={props =>\n        (renderRoute(isPrivate, props))\n      }\n      { ...rest }\n    />\n  )\n};\n\nexport default AppRoutes;\n","import { Link } from 'react-router-dom';\nimport React from 'react';\nimport { useAuth } from '../use-auth';\nimport { Button, Menu, MenuItem } from '@material-ui/core';\n\nfunction Navbar () {\n  const auth = useAuth();\n  const [anchorEl, setAnchorEl] = React.useState<HTMLAnchorElement|null>(null);\n\n  const handleClick = (event: React.MouseEvent) => {\n    const el = event.currentTarget as HTMLAnchorElement\n    setAnchorEl(el);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n  <header className=\"App-header\">\n    <nav className=\"navbar\">\n      <a className=\"logo\" href=\"/\">\n        <svg className=\"logo-img\" viewBox=\"0 0 96 82\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" width={30} height={30}>\n          <path d=\"M46.6972 25.3508H46.4086H25.7393L36.0909 7.4212H60.5168L70.8684 25.3508H50.0493H49.7606H46.6972ZM49.7606 81.5H50.0493H78.5376H78.8263L78.9706 81.25L94.8908 53.6754L95.0352 53.4254L94.8908 53.1754L80.7046 28.6041L80.7216 28.5746L80.5773 28.3246L64.6571 0.75L64.5127 0.5H64.224H32.3837H32.095L31.9506 0.75L17.7473 25.3508H17.6315L17.4872 25.6008L1.56699 53.1754L1.42265 53.4254L1.56699 53.6754L17.4872 81.25L17.6315 81.5H17.9202H46.4086H46.6972H49.7606ZM9.41457 53.4254L19.8242 35.3955L30.2167 53.3959L30.1997 53.4254L30.344 53.6754L42.4126 74.5788H21.6275L9.41457 53.4254ZM74.8304 74.5788H54.0452L64.3969 56.6492H64.5127L64.6571 56.3992L76.7086 35.5253L87.0433 53.4254L74.8304 74.5788ZM54.0452 32.272H70.5949L62.3201 46.6045L54.0452 32.272ZM26.0128 32.272H42.4126L34.2127 46.4747L26.0128 32.272ZM48.2289 70.8105L40.0528 56.6492H56.405L48.2289 70.8105ZM40.3263 49.728L48.2289 36.0403L56.1315 49.728H40.3263Z\" fill=\"url(#paint0_linear)\" stroke=\"#1BCB81\"/>\n          <defs>\n            <linearGradient id=\"paint0_linear\" x1=\"18.5\" y1=\"11\" x2=\"101\" y2=\"64.5\" gradientUnits=\"userSpaceOnUse\">\n              <stop stopColor=\"#0DEDFC\" stopOpacity=\"0.35\"/>\n              <stop offset=\"1\" stopColor=\"#3E9EA4\" stopOpacity=\"0.81\"/>\n              <stop offset=\"1\" stopColor=\"#28A9B1\" stopOpacity=\"0.96\"/>\n            </linearGradient>\n          </defs>\n        </svg>\n        Zeyrek read\n      </a>\n      <div className=\"menu\">\n        { auth.user ? (\n          <>\n            <Button color=\"primary\" variant=\"outlined\"  component={Link} to=\"/new_text/\">+ NEW TEXT</Button>\n            <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n              <img width={30} height={30} src={auth.user.photoURL ? auth.user.photoURL : undefined} alt=\"user avatar\" className=\"user__avatar\"/>\n              <span className=\"user__name\">{auth.user.displayName}</span>\n            </Button>\n          <Menu\n            id=\"simple-menu\"\n            anchorEl={anchorEl}\n            keepMounted\n            open={Boolean(anchorEl)}\n            onClose={handleClose}\n          >\n            <MenuItem component={Link} to='/Dashboard'>Profile</MenuItem>\n            <MenuItem onClick={auth.logout}>Logout</MenuItem>\n          </Menu>\n          </>\n        ) : (\n          <>\n            <Link to='/login' className=\"button login-button\">Log In</Link>\n            <Link to='/signup' className=\"button signup-button\">Sign Up</Link>\n          </>\n          )}\n      </div>\n    </nav>\n  </header>\n  );\n}\n\nexport default Navbar;\n","import { BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport './App.css';\nimport React  from 'react'\nimport {ProvideAuth} from \"./use-auth\";\nimport routes from './config/routes'\nimport AppRoutes from './components/AppRoute';\nimport Navbar from \"./components/Navbar\";\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport {ProvideText} from \"./use-text\";\n\n\nfunction App(): React.ReactElement {\n    const theme = createMuiTheme({\n        palette: {\n            primary: {\n                main: \"#44c2ca\",\n                contrastText: '#ffffff'\n            }\n        }\n    });\n  return (\n      <ThemeProvider theme={theme}>\n        <ProvideAuth>\n            <ProvideText>\n              <Router>\n                  <Navbar />\n                <Switch>\n                  { routes.map((route) => (\n                    <AppRoutes\n                      key={route.path}\n                      path={route.path}\n                      component={route.component}\n                      isPrivate={route.isPrivate}\n                    />\n                  ))}\n                </Switch>\n              </Router>\n            </ProvideText>\n        </ProvideAuth>\n      </ThemeProvider>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}